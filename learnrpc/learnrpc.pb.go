// Code generated by protoc-gen-go. DO NOT EDIT.
// source: learnrpc.proto

package learnrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MessageInterceptRequest struct {
	ClientID             string   `protobuf:"bytes,1,opt,name=clientID,proto3" json:"clientID,omitempty"`
	FirstCriteria        int64    `protobuf:"varint,2,opt,name=firstCriteria,proto3" json:"firstCriteria,omitempty"`
	SecondCriteria       int64    `protobuf:"varint,3,opt,name=secondCriteria,proto3" json:"secondCriteria,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageInterceptRequest) Reset()         { *m = MessageInterceptRequest{} }
func (m *MessageInterceptRequest) String() string { return proto.CompactTextString(m) }
func (*MessageInterceptRequest) ProtoMessage()    {}
func (*MessageInterceptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_895f99a2b1f25468, []int{0}
}

func (m *MessageInterceptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageInterceptRequest.Unmarshal(m, b)
}
func (m *MessageInterceptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageInterceptRequest.Marshal(b, m, deterministic)
}
func (m *MessageInterceptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageInterceptRequest.Merge(m, src)
}
func (m *MessageInterceptRequest) XXX_Size() int {
	return xxx_messageInfo_MessageInterceptRequest.Size(m)
}
func (m *MessageInterceptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageInterceptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MessageInterceptRequest proto.InternalMessageInfo

func (m *MessageInterceptRequest) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *MessageInterceptRequest) GetFirstCriteria() int64 {
	if m != nil {
		return m.FirstCriteria
	}
	return 0
}

func (m *MessageInterceptRequest) GetSecondCriteria() int64 {
	if m != nil {
		return m.SecondCriteria
	}
	return 0
}

type MessageInterceptResponse struct {
	// Whether or not the client accepts the channel.
	Accept bool `protobuf:"varint,1,opt,name=accept,proto3" json:"accept,omitempty"`
	//
	//An optional error to send the initiating party to indicate why the message was rejected
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageInterceptResponse) Reset()         { *m = MessageInterceptResponse{} }
func (m *MessageInterceptResponse) String() string { return proto.CompactTextString(m) }
func (*MessageInterceptResponse) ProtoMessage()    {}
func (*MessageInterceptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_895f99a2b1f25468, []int{1}
}

func (m *MessageInterceptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageInterceptResponse.Unmarshal(m, b)
}
func (m *MessageInterceptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageInterceptResponse.Marshal(b, m, deterministic)
}
func (m *MessageInterceptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageInterceptResponse.Merge(m, src)
}
func (m *MessageInterceptResponse) XXX_Size() int {
	return xxx_messageInfo_MessageInterceptResponse.Size(m)
}
func (m *MessageInterceptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageInterceptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MessageInterceptResponse proto.InternalMessageInfo

func (m *MessageInterceptResponse) GetAccept() bool {
	if m != nil {
		return m.Accept
	}
	return false
}

func (m *MessageInterceptResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*MessageInterceptRequest)(nil), "MessageInterceptRequest")
	proto.RegisterType((*MessageInterceptResponse)(nil), "MessageInterceptResponse")
}

func init() { proto.RegisterFile("learnrpc.proto", fileDescriptor_895f99a2b1f25468) }

var fileDescriptor_895f99a2b1f25468 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x89, 0x8b, 0xcb, 0xee, 0xc0, 0xee, 0x61, 0x10, 0x8d, 0x7b, 0x5a, 0x16, 0x91, 0x9e,
	0x8a, 0xe8, 0x23, 0xd4, 0x83, 0x3d, 0x14, 0x4a, 0x1e, 0x40, 0x88, 0xe9, 0x58, 0x02, 0x25, 0x89,
	0x93, 0xf4, 0xe0, 0xd9, 0x17, 0x17, 0xa3, 0x14, 0xec, 0xd2, 0xe3, 0xff, 0xf1, 0x33, 0xf3, 0xcd,
	0xc0, 0x7e, 0x20, 0xcd, 0x8e, 0x83, 0x29, 0x03, 0xfb, 0xe4, 0x4f, 0x5f, 0x02, 0x6e, 0x1a, 0x8a,
	0x51, 0xf7, 0x54, 0xbb, 0x44, 0x6c, 0x28, 0x24, 0x45, 0x1f, 0x23, 0xc5, 0x84, 0x07, 0xd8, 0x98,
	0xc1, 0x92, 0x4b, 0xf5, 0xb3, 0x14, 0x47, 0x51, 0x6c, 0xd5, 0x94, 0xf1, 0x0e, 0x76, 0xef, 0x96,
	0x63, 0xaa, 0xd8, 0x26, 0x62, 0xab, 0xe5, 0xc5, 0x51, 0x14, 0x2b, 0xf5, 0x1f, 0xe2, 0x3d, 0xec,
	0x23, 0x19, 0xef, 0xba, 0xa9, 0xb6, 0xca, 0xb5, 0x19, 0x3d, 0xbd, 0x80, 0x3c, 0x97, 0x88, 0xc1,
	0xbb, 0x48, 0x78, 0x0d, 0x6b, 0x6d, 0x7e, 0x48, 0x76, 0xd8, 0xa8, 0xbf, 0x84, 0x57, 0x70, 0x49,
	0xcc, 0x9e, 0xf3, 0xe6, 0xad, 0xfa, 0x0d, 0x8f, 0xaf, 0xb0, 0x53, 0x6d, 0xd5, 0x0e, 0xfa, 0xb3,
	0x67, 0x3f, 0xba, 0x0e, 0x1b, 0xc0, 0xf9, 0x68, 0xcf, 0x28, 0xcb, 0x85, 0xa3, 0x0f, 0xb7, 0xe5,
	0x92, 0x49, 0x21, 0x1e, 0xc4, 0xdb, 0x3a, 0xbf, 0xed, 0xe9, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xa2,
	0xab, 0x6b, 0x18, 0x48, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RPCPlaygroundClient is the client API for RPCPlayground service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCPlaygroundClient interface {
	//*
	//A bi-directional stream of of messages.
	//MessageInterceptor dispatches a bi-directional streaming RPC in which
	//MessageIntercept requests are sent to the client and the client replies with
	//a message instructing the server on how to proceed. This allows
	//clients to specify their own criteria for processing messages
	//through a single persistent connection.
	MessageInterceptor(ctx context.Context, opts ...grpc.CallOption) (RPCPlayground_MessageInterceptorClient, error)
}

type rPCPlaygroundClient struct {
	cc *grpc.ClientConn
}

func NewRPCPlaygroundClient(cc *grpc.ClientConn) RPCPlaygroundClient {
	return &rPCPlaygroundClient{cc}
}

func (c *rPCPlaygroundClient) MessageInterceptor(ctx context.Context, opts ...grpc.CallOption) (RPCPlayground_MessageInterceptorClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RPCPlayground_serviceDesc.Streams[0], "/RPCPlayground/MessageInterceptor", opts...)
	if err != nil {
		return nil, err
	}
	x := &rPCPlaygroundMessageInterceptorClient{stream}
	return x, nil
}

type RPCPlayground_MessageInterceptorClient interface {
	Send(*MessageInterceptRequest) error
	Recv() (*MessageInterceptResponse, error)
	grpc.ClientStream
}

type rPCPlaygroundMessageInterceptorClient struct {
	grpc.ClientStream
}

func (x *rPCPlaygroundMessageInterceptorClient) Send(m *MessageInterceptRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *rPCPlaygroundMessageInterceptorClient) Recv() (*MessageInterceptResponse, error) {
	m := new(MessageInterceptResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RPCPlaygroundServer is the server API for RPCPlayground service.
type RPCPlaygroundServer interface {
	//*
	//A bi-directional stream of of messages.
	//MessageInterceptor dispatches a bi-directional streaming RPC in which
	//MessageIntercept requests are sent to the client and the client replies with
	//a message instructing the server on how to proceed. This allows
	//clients to specify their own criteria for processing messages
	//through a single persistent connection.
	MessageInterceptor(RPCPlayground_MessageInterceptorServer) error
}

func RegisterRPCPlaygroundServer(s *grpc.Server, srv RPCPlaygroundServer) {
	s.RegisterService(&_RPCPlayground_serviceDesc, srv)
}

func _RPCPlayground_MessageInterceptor_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RPCPlaygroundServer).MessageInterceptor(&rPCPlaygroundMessageInterceptorServer{stream})
}

type RPCPlayground_MessageInterceptorServer interface {
	Send(*MessageInterceptResponse) error
	Recv() (*MessageInterceptRequest, error)
	grpc.ServerStream
}

type rPCPlaygroundMessageInterceptorServer struct {
	grpc.ServerStream
}

func (x *rPCPlaygroundMessageInterceptorServer) Send(m *MessageInterceptResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *rPCPlaygroundMessageInterceptorServer) Recv() (*MessageInterceptRequest, error) {
	m := new(MessageInterceptRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _RPCPlayground_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RPCPlayground",
	HandlerType: (*RPCPlaygroundServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MessageInterceptor",
			Handler:       _RPCPlayground_MessageInterceptor_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "learnrpc.proto",
}
